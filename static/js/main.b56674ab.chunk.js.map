{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","itemWidth","frameSize","step","animationDuration","slideIndex","setSlideIndex","useState","useEffect","lastSlideIndex","length","carouselStyle","width","concat","transition","slideStyle","transform","_jsxs","className","style","children","_jsx","map","image","src","alt","type","onClick","handlePrevSlide","prevSlideIndex","disabled","handleNextSlide","nextSlideIndex","App","React","Component","constructor","arguments","state","handleChange","event","name","value","target","this","setState","prevFormData","render","htmlFor","id","onChange","placeholder","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b56674ab.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './Carousel.scss';\nimport { State } from '../types';\n\nconst Carousel = ({\n  images, itemWidth, frameSize, step, animationDuration,\n} : State) => {\n  const [slideIndex, setSlideIndex] = useState<number>(0);\n\n  useEffect(() => {\n    setSlideIndex(0);\n  }, [frameSize]);\n\n  const firstSlideIndex = 0;\n  const lastSlideIndex = images.length - frameSize;\n\n  const handleNextSlide = () => {\n    const nextSlideIndex = slideIndex + step;\n\n    if (nextSlideIndex < lastSlideIndex) {\n      setSlideIndex(nextSlideIndex);\n    } else {\n      setSlideIndex(lastSlideIndex);\n    }\n  };\n\n  const handlePrevSlide = () => {\n    const prevSlideIndex = slideIndex - step;\n\n    if (prevSlideIndex > firstSlideIndex) {\n      setSlideIndex(prevSlideIndex);\n    } else {\n      setSlideIndex(firstSlideIndex);\n    }\n  };\n\n  const carouselStyle = {\n    width: `${itemWidth * frameSize}px`,\n    transition: `${animationDuration}ms`,\n  };\n\n  const slideStyle = {\n    transform: `translateX(${0 - slideIndex * itemWidth}px)`,\n    transition: `${animationDuration}ms`,\n  };\n\n  return (\n    <div\n      className=\"carousel\"\n      style={carouselStyle}\n    >\n      <ul className=\"carousel__list\">\n        {images.map(image => {\n          return (\n            <li\n              key={image}\n              className=\"carousel__item\"\n              style={slideStyle}\n            >\n              <img\n                src={image}\n                alt={image}\n                width={itemWidth}\n                className=\"carousel__image\"\n              />\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className=\"carousel__buttons\">\n        <button\n          className=\"carousel__button carousel__button--prev\"\n          type=\"button\"\n          onClick={handlePrevSlide}\n          disabled={slideIndex <= firstSlideIndex}\n        >\n          Previous\n        </button>\n        <button\n          className=\"carousel__button carousel__button--next\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNextSlide}\n          disabled={slideIndex >= lastSlideIndex}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { State } from './types';\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((prevFormData) => ({ ...prevFormData, [name]: +value }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1  data-cy=\"title\">Carousel</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n        <div className=\"form\">\n          <div className=\"form__field\">\n            <label htmlFor=\"itemId\">\n              Customize image width:\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              value={this.state.itemWidth}\n              onChange={this.handleChange}\n              placeholder=\"Image width\"\n            />\n          </div>\n          <div className=\"form__field\">\n            <label htmlFor=\"frameId\">\n              Number of images:\n            </label>\n            <input\n              className=\"form__input\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              value={this.state.frameSize}\n              onChange={this.handleChange}\n              placeholder=\"Frame size\"\n              type=\"number\"\n            />\n          </div>\n          <div className=\"form__field\">\n            <label htmlFor=\"stepId\">\n              Step images scrolled per click:\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              value={this.state.step}\n              onChange={this.handleChange}\n              placeholder=\"Step\"\n            />\n          </div>\n          <div className=\"form__field\">\n            <label htmlFor=\"animationId\">\n              Animation duration:\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationId\"\n              value={this.state.animationDuration}\n              onChange={this.handleChange}\n              placeholder=\"Animation duration\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}